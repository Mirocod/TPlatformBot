# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

from bot_sys import bot_bd, log, config, keyboard, user_access
from bot_modules import start, groups
from template import simple_message, sql_request

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import Dispatcher

class FSMRequestToBDAccess(StatesGroup):
    sqlRequest = State()

# ---------------------------------------------------------
# –ë–î
table_name = 'module_access'
module_name = 'access'

init_bd_cmds = [f"""CREATE TABLE IF NOT EXISTS {table_name}(
    modName TEXT,
    modAccess TEXT,
    itemDefaultAccess TEXT,
    UNIQUE(modName)
);""",
f"INSERT OR IGNORE INTO {table_name} (modName, modAccess, itemDefaultAccess) VALUES ('{module_name}', '{user_access.user_access_group_all}=-', '{user_access.user_access_group_all}=-');"
]

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è

access_start_message = '''
<b> –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</b>

–ü–æ–∫–∞ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ö–∞—Ä–¥–∫–æ—Ä–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î
'''

request_start_message = '''
**–ó–∞–¥–∞–π—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –ë–î**

–ú–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏:
1. `SELECT * FROM users` - –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
2. `SELECT * FROM module_access` - –í—Å–µ –ø—Ä–∞–≤–∞ –∫ –º–æ–¥—É–ª—è–º
3. `UPDATE module_access SET modAccess = 'NEWACCESS' WHERE modName = 'MODNAME'` - –ó–∞–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∞ NEWACCESS –¥–ª—è –º–æ–¥—É–ª—è MODNAME
'''

help_message = '''
üìÑ –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ë–î –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∞–≤–∞–º–∏
`module_access (modName, modAccess)` - —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∞ –¥–ª—è –º–æ–¥—É–ª–µ–π

modAccess - —Å—Ç—Ä–æ–∫–∞
''' + user_access.user_access_readme

access_denied_message = '''
‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!
''' 

access_button_name = "‚õÄ –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
sql_request_button_name = "‚õÅ –ó–∞–ø—Ä–æ—Å –∫ –ë–î –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
help_button_name = "üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–æ—Å—Ç—É–ø–∞"

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏

def GetEditAccessKeyboardButtons(a_UserGroups):
    cur_buttons = [
        keyboard.ButtonWithAccess(sql_request_button_name, user_access.AccessMode.ACCEES_EDIT, GetAccess()),
        keyboard.ButtonWithAccess(help_button_name, user_access.AccessMode.VIEW, GetAccess())
    ]
    mods = [start]
    return keyboard.MakeKeyboard(keyboard.GetButtons(mods) + cur_buttons, a_UserGroups)

# ---------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö 

def GetModuleAccessList():
    return bot_bd.SelectBDTemplate(table_name)()

# ---------------------------------------------------------
# API

def GetAccessForModule(a_ModuleName):
    alist = GetModuleAccessList()
    for i in alist:
        if i[0] == a_ModuleName:
            return i[1]
    return ''

def GetItemDefaultAccessForModule(a_ModuleName):
    alist = GetModuleAccessList()
    for i in alist:
        if i[0] == a_ModuleName:
            return i[2]
    return ''

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
def GetInitBDCommands():
    return init_bd_cmds

def GetAccess():
    return GetAccessForModule(module_name)

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
def GetModuleButtons():
    return [keyboard.ButtonWithAccess(access_button_name, user_access.AccessMode.VIEW, GetAccess())]

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
def RegisterHandlers(dp : Dispatcher):
    dp.register_message_handler(simple_message.InfoMessageTemplate(access_start_message, GetEditAccessKeyboardButtons, GetAccess), text = access_button_name)
    dp.register_message_handler(simple_message.InfoMessageTemplate(help_message, GetEditAccessKeyboardButtons, GetAccess), text = help_button_name)

    sql_request.RequestToBDRegisterHandlers(dp, sql_request_button_name, request_start_message, FSMRequestToBDAccess, GetEditAccessKeyboardButtons, user_access.AccessMode.ACCEES_EDIT, GetAccess)
