# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ, 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

from bot_sys import keyboard, user_access, bot_bd, bd_table
from bot_modules import mod_simple_message, access_utils, mod_table_operate
from template import simple_message, sql_request, bd_item

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

class FSMRequestToBDAccess(StatesGroup):
    sqlRequest = State()

# ---------------------------------------------------------
# –ë–î
module_name = 'access'

table_name = access_utils.table_name
mod_name_field = access_utils.mod_name_field
moduleaccess_field = access_utils.moduleaccess_field
mod_default_access_field = access_utils.mod_default_access_field

table = bd_table.Table(table_name, [
        bd_table.TableField(mod_name_field, bd_table.TableFieldDestiny.KEY, bd_table.TableFieldType.STR),
        bd_table.TableField(moduleaccess_field, bd_table.TableFieldDestiny.ACCESS, bd_table.TableFieldType.STR),
        bd_table.TableField(mod_default_access_field, bd_table.TableFieldDestiny.DEFAULT_ACCESS, bd_table.TableFieldType.STR),
        ])
# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è

start_message = '''
<b> –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</b>

–ü–æ–∫–∞ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ö–∞—Ä–¥–∫–æ—Ä–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î
'''

request_start_message = '''
**–ó–∞–¥–∞–π—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –ë–î**

–ú–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏:
1. `SELECT * FROM users` - –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
2. `SELECT * FROM module_access` - –í—Å–µ –ø—Ä–∞–≤–∞ –∫ –º–æ–¥—É–ª—è–º
3. `UPDATE module_access SET modAccess = 'NEWACCESS' WHERE modName = 'MODNAME'` - –ó–∞–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∞ NEWACCESS –¥–ª—è –º–æ–¥—É–ª—è MODNAME
'''

help_message = '''
üìÑ –°—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –ë–î –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π
–ò–º—è –ë–î: module_access 
–ü–æ–ª—è:(modName, modAccess)

modAccess - —Å—Ç—Ä–æ–∫–∞
''' + user_access.user_access_readme

start_button_name = "‚õÄ –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
sql_request_button_name = "‚õÅ –ó–∞–ø—Ä–æ—Å –∫ –ë–î –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
help_button_name = "üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–æ—Å—Ç—É–ø–∞"

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞.

moduleaccess_select_to_edit_message = '''
–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
'''

edit_moduleaccess_access_button_name = "‚óá –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é"
moduleaccess_edit_access_message = f'''
–¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é #{mod_name_field}:
#{moduleaccess_field}

{user_access.user_access_readme}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç—É–ø–∞:
'''

edit_moduleaccess_default_access_button_name = "‚óà –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
moduleaccess_edit_default_access_message = f'''
–¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫ –º–æ–¥—É–ª—é #{mod_name_field}:
#{mod_default_access_field}

{user_access.user_access_readme}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç—É–ø–∞:
'''
moduleaccess_success_edit_message = '''‚úÖ –î–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω!'''

button_names = {
    mod_simple_message.ButtonNames.START: start_button_name,
    mod_table_operate.ButtonNames.EDIT: "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ACCESS): edit_moduleaccess_access_button_name,
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.DEFAULT_ACCESS): edit_moduleaccess_default_access_button_name,
    }

messages = {
    mod_simple_message.Messages.START: start_message,
    mod_table_operate.Messages.START_EDIT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
''',
    mod_table_operate.Messages.SELECT_TO_EDIT: moduleaccess_select_to_edit_message,
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.ACCESS): moduleaccess_edit_access_message,
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.DEFAULT_ACCESS): moduleaccess_edit_default_access_message,
    mod_table_operate.Messages.SUCCESS_EDIT: moduleaccess_success_edit_message,
}

init_access = f'{user_access.user_access_group_new}=-'

class ModuleAccess(mod_table_operate.TableOperateModule):
    def __init__(self, a_ChildModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_BotSubscribes, a_Log):
        super().__init__(table, messages, button_names, None, None, init_access, a_ChildModuleNameList, a_ChildModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_BotSubscribes, a_Log)
        self.m_SqlRequestButtonName = self.CreateButton('sql request', sql_request_button_name)
        self.m_RequestStartMessage = self.CreateMessage('equest start', request_start_message)

        self.m_HelpButtonName = self.CreateButton('help', help_button_name)
        self.m_HelpMessage = self.CreateMessage('help', help_message)

        self.m_HelpMessageHandler = simple_message.InfoMessageTemplate(
                self.m_Bot,
                self.m_HelpMessage,
                self.m_GetStartKeyboardButtonsFunc,
                None,
                self.m_GetAccessFunc
                )

    def GetButtonNameAndKeyValueAndAccess(self, a_Item):
        return \
                a_Item[self.m_Table.GetFieldIDByDestiny(bd_table.TableFieldDestiny.KEY)],\
                a_Item[self.m_Table.GetFieldIDByDestiny(bd_table.TableFieldDestiny.KEY)],\
                a_Item[self.m_Table.GetFieldIDByDestiny(bd_table.TableFieldDestiny.ACCESS)]

    def GetName(self):
        return module_name

    def GetStartKeyboardButtons(self, a_Message, a_UserGroups):
        mod_buttons = super().GetStartKeyboardButtons(a_Message, a_UserGroups)
        cur_buttons = [
                keyboard.ButtonWithAccess(self.m_SqlRequestButtonName, user_access.AccessMode.EDIT, self.GetAccess()), 
                keyboard.ButtonWithAccess(self.m_HelpButtonName , user_access.AccessMode.VIEW, self.GetAccess())
                ]
        return mod_buttons + keyboard.MakeButtons(self.m_Bot, cur_buttons, a_UserGroups)

    def RegisterHandlers(self):
        super().RegisterHandlers()
        sql_request.RequestToBDRegisterHandlers(
                self.m_Bot,
                self.m_SqlRequestButtonName,
                self.m_RequestStartMessage,
                FSMRequestToBDAccess,
                self.m_GetStartKeyboardButtonsFunc,
                user_access.AccessMode.EDIT,
                self.m_GetAccessFunc
                )
        self.m_Bot.RegisterMessageHandler(
                self.m_HelpMessageHandler, 
                bd_item.GetCheckForTextFunc(self.m_HelpButtonName)
                )

