# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ, 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

from bot_sys import bot_bd, keyboard, user_access, bd_table
from bot_modules import mod_table_operate, mod_simple_message
from bot_modules import access_utils, groups_utils, groups, user_in_groups

# ---------------------------------------------------------
# –ë–î
module_name = 'users'

table_name = module_name
key_name = 'user_id'
name_field = 'userName'
name1_field = 'userFirstName'
name2_field = 'userLastName'
is_bot_field = 'userIsBot'
language_code_field = 'userLanguageCode'
photo_field = 'userPhoto'
access_field = 'userAccess'
create_datetime_field = 'createDateTime'

table = bd_table.Table(table_name, [
        bd_table.TableField(key_name, bd_table.TableFieldDestiny.KEY, bd_table.TableFieldType.INT),
        bd_table.TableField(name_field, bd_table.TableFieldDestiny.NAME, bd_table.TableFieldType.STR),
        bd_table.TableField(name1_field, bd_table.TableFieldDestiny.DESC, bd_table.TableFieldType.STR),
        bd_table.TableField(name2_field, bd_table.TableFieldDestiny.DESC, bd_table.TableFieldType.STR),
        bd_table.TableField(is_bot_field, bd_table.TableFieldDestiny.DESC, bd_table.TableFieldType.STR),
        bd_table.TableField(language_code_field, bd_table.TableFieldDestiny.DESC, bd_table.TableFieldType.STR),
        bd_table.TableField(photo_field, bd_table.TableFieldDestiny.PHOTO, bd_table.TableFieldType.STR),
        bd_table.TableField(access_field, bd_table.TableFieldDestiny.ACCESS, bd_table.TableFieldType.STR),
        bd_table.TableField(create_datetime_field, bd_table.TableFieldDestiny.CREATE_DATE, bd_table.TableFieldType.STR),
        ])

init_access = f'{user_access.user_access_group_new}=v'

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏

button_names = {
    mod_simple_message.ButtonNames.START: "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    mod_table_operate.ButtonNames.LIST: "üìÉ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
#    mod_table_operate.ButtonNames.ADD: "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    mod_table_operate.ButtonNames.EDIT: "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.PHOTO): "‚òê –ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.NAME): "‚âÇ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.DESC): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ACCESS): "‚úã –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
    mod_table_operate.ButtonNames.DEL: "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
}

messages = {
    mod_simple_message.Messages.START: f'''
<b>{button_names[mod_simple_message.ButtonNames.START]}</b>

''',
    mod_table_operate.Messages.SELECT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
''',
    mod_table_operate.Messages.ERROR_FIND: '''
‚ùå –û—à–∏–±–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω
''',
    mod_table_operate.Messages.OPEN: f'''
<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  #{name_field}</b>

<b>ID:</b> #{key_name}
<b>–ò–º—è:</b> #{name_field}
<b>–ò–º—è1:</b> #{name1_field}
<b>–ò–º—è2:</b> #{name2_field}
<b>–ö–æ–¥ —è–∑—ã–∫–∞:</b> #{language_code_field}
<b>–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:</b> #{create_datetime_field}
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.NAME): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –®–∞–≥ ‚Ññ1

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.DESC): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –®–∞–≥ ‚Ññ2

–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.PHOTO): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –®–∞–≥ ‚Ññ3

–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–ª–æ–∂–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–§–æ—Ç–æ):
–û–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–∏.
''',
    mod_table_operate.Messages.SUCCESS_CREATE: '''‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!''',
    mod_table_operate.Messages.START_EDIT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
''',
    mod_table_operate.Messages.SELECT_TO_EDIT: '''
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.PHOTO): '''
–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–§–æ—Ç–æ):
–û–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–∏.
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.NAME): f'''
–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
#{name_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.DESC): f'''
–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
#{name1_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.ACCESS): f'''
–¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:
#{access_field}

{user_access.user_access_readme}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç—É–ø–∞:
''',
    mod_table_operate.Messages.SUCCESS_EDIT: '''‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω!''',
    mod_table_operate.Messages.SELECT_TO_DELETE: '''
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.
''',
    mod_table_operate.Messages.SUCCESS_DELETE: '''‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!''',
}

class ModuleUsers(mod_table_operate.TableOperateModule):
    def __init__(self, a_ParentModName, a_ChildModName, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log):
        super().__init__(table, messages, button_names, a_ParentModName, a_ChildModName, init_access, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log)

    def GetName(self):
        return module_name


# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
def AddUser(a_Bot, a_UserID, a_UserName, a_UserName1, a_UserName2, a_UserIsBot, a_LanguageCode):
    a_Bot.SQLRequest(f"INSERT OR IGNORE INTO users ({key_name}, {name_field}, {name1_field}, {name2_field}, {is_bot_field}, {language_code_field}, {photo_field}, {access_field}, {create_datetime_field}) VALUES (?, ?, ?, ?, ?, ?, 0, ?, {bot_bd.GetBDDateTimeNow()});", 
            commit=True, param = (a_UserID, a_UserName, a_UserName1, a_UserName2, a_UserIsBot, a_LanguageCode, access_utils.GetItemDefaultAccessForModule(a_Bot, module_name)))

    user_groups = groups_utils.GetUserGroupData(a_Bot, a_UserID)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É user_access.user_access_group_new
    if len(user_groups.group_names_list) == 0:
        new_group_id = a_Bot.SQLRequest(f'SELECT {groups.key_name} FROM {groups.table_name} WHERE {groups.name_field} = ?', 
                param = [user_access.user_access_group_new])
        if new_group_id and new_group_id[0]:
            a_Bot.SQLRequest(f"INSERT OR IGNORE INTO {user_in_groups.table_name} ({user_in_groups.name_field}, {user_in_groups.parent_id_field}, {user_in_groups.access_field}, {user_in_groups.create_datetime_field}) VALUES (?, ?, ?, {bot_bd.GetBDDateTimeNow()});", 
                    commit=True, param = (a_UserID, new_group_id[0][0], access_utils.GetItemDefaultAccessForModule(a_Bot, module_name)))

def GetUserInfo(a_Bot, a_UserID):
    user_info = a_Bot.SQLRequest('SELECT * FROM users WHERE user_id = ?', param = [a_UserID])
    if len(user_info) != 0:
        return user_info[0]
    return None
