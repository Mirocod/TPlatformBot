# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

from bot_sys import bot_bd, log, config, keyboard, user_access
from bot_modules import start, access, groups
from template import simple_message

from aiogram import types
from aiogram.dispatcher import Dispatcher

# ---------------------------------------------------------
# –ë–î
module_name = 'profile'

init_bd_cmds = ["""CREATE TABLE IF NOT EXISTS users(
    user_id INTEGER,
    userName TEXT,
    userAccess TEXT,
    UNIQUE(user_id)
);""",
f"INSERT OR IGNORE INTO module_access (modName, modAccess, itemDefaultAccess) VALUES ('{module_name}', '{user_access.user_access_group_all}=+', '{user_access.user_access_group_all}=+');"
]

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è

profile_message = '''
<b>üì∞ –ü—Ä–æ—Ñ–∏–ª—å:</b> 

<b>ID:</b> @user_id
<b>–ò–º—è:</b> @user_name
'''

user_profile_button_name = "üì∞ –ü—Ä–æ—Ñ–∏–ª—å"

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏

def GetStartKeyboardButtons(a_UserGroups):
    mods = [start]
    return keyboard.MakeKeyboardForMods(mods, a_UserGroups)

# ---------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

async def ProfileOpen(a_Message, state = None):
    user_info = GetUserInfo(a_Message.from_user.id)
    msg = profile_message
    if not user_info is None:
        msg = msg.replace('@user_id', str(user_info[0])).replace('@user_name', str(user_info[1]))
    return simple_message.WorkFuncResult(msg, item_access = user_info[2])

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
def AddUser(a_UserID, a_UserName):
    bot_bd.SQLRequestToBD("INSERT OR IGNORE INTO users (user_id, userName, userAccess) VALUES (?, ?, ?);", commit=True, param = (a_UserID, a_UserName, access.GetItemDefaultAccessForModule(module_name)))

def GetUserInfo(a_UserID):
    user_info = bot_bd.SQLRequestToBD('SELECT * FROM users WHERE user_id = ?', param = [a_UserID])
    if len(user_info) != 0:
        return user_info[0]
    return None

# ---------------------------------------------------------
# API

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
def GetInitBDCommands():
    return init_bd_cmds

def GetAccess():
    return access.GetAccessForModule(module_name)

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
def GetModuleButtons():
    return [keyboard.ButtonWithAccess(user_profile_button_name, user_access.AccessMode.VIEW, GetAccess())]

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
def RegisterHandlers(dp : Dispatcher):
    dp.register_message_handler(simple_message.SimpleMessageTemplate(ProfileOpen, GetStartKeyboardButtons, GetAccess), text = user_profile_button_name)
