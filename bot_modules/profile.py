# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

from bot_sys import bot_bd, log, config, keyboard
from bot_modules import start
from aiogram import Bot, types

import sqlite3

from aiogram.dispatcher import Dispatcher

bot = Bot(token=config.GetTelegramBotApiToken(), parse_mode=types.ParseMode.HTML)

# ---------------------------------------------------------
# –ë–î
init_bd_cmd = """CREATE TABLE IF NOT EXISTS users(
    user_id INTEGER,
    userName TEXT,
    UNIQUE(user_id)
);"""

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è

profile_message = '''
<b>–ü—Ä–æ—Ñ–∏–ª—å:</b>

<b>ID:</b> @user_id
<b>–ò–º—è:</b> @user_name
'''

user_profile_button_name = "üì∞ –ü—Ä–æ—Ñ–∏–ª—å"

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏

def GetProfileKeyboardButtons(a_UserAccess):
    start_button_names = start.GetButtonNames(a_UserAccess)
    return keyboard.MakeKeyboard([start_button_names])

# ---------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def ProfileOpen(a_Message):
    user_id = str(a_Message.from_user.id)
    user_info = GetUserInfo(user_id)
    msg = profile_message
    if not user_info is None:
        msg = msg.replace('@user_id', str(user_info[0])).replace('@user_name', str(user_info[1]))
    await bot.send_message(user_id, msg, reply_markup = GetProfileKeyboardButtons(None))

# ---------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
def AddUser(a_UserID, a_UserName):
    db = sqlite3.connect(bot_bd.GetBDFileName())
    cursor = db.cursor()
    cursor.execute("INSERT OR IGNORE INTO users (user_id, userName) VALUES (?, ?);", (a_UserID, a_UserName));
    db.commit()
    cursor.close()
    db.close()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
def GetUserInfo(a_UserID):
    db = sqlite3.connect(bot_bd.GetBDFileName())
    cursor = db.cursor()
    user_info = cursor.execute('SELECT * FROM users WHERE user_id = ?', ([a_UserID])).fetchall()
    cursor.close()
    db.close()
    if len(user_info) != 0:
        return user_info[0]
    return None

# ---------------------------------------------------------
# API

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
def GetInitBDCommands():
    return [init_bd_cmd]

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
def GetButtonNames(a_UserAccess):
    return user_profile_button_name

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
def RegisterHandlers(dp : Dispatcher):
    dp.register_message_handler(ProfileOpen, text = user_profile_button_name)
