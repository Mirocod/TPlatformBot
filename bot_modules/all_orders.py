# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ, 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ó–∞–∫–∞–∑—ã

from bot_sys import bot_bd, keyboard, user_access, bd_table
from bot_modules import mod_table_operate, mod_simple_message, orders
from template import bd_item_select, bd_item_view, bd_item


# ---------------------------------------------------------
# –ë–î
module_name = 'all_orders'

table = orders.table

init_access = f'{user_access.user_access_group_new}=-'

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏

button_names = {}
button_names.update(orders.button_names)
button_names.pop(mod_table_operate.ButtonNames.ADD)

cur_button_names = {
    mod_simple_message.ButtonNames.START: "‚Äçüõí –í—Å–µ –∑–∞–∫–∞–∑—ã",
    mod_table_operate.ButtonNames.LIST: "üìÉ –°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤",
    orders.ButtonNames.LIST_ALL: "üìÉ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤",
    mod_table_operate.ButtonNames.EDIT: "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.PHOTO): "‚òê –ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞–∫–∞–∑–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.NAME): "‚âÇ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∑–∞–∫–∞–∑–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.DESC): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –∑–∞–∫–∞–∑–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ADDRESS): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –≤ –∑–∞–∫–∞–∑–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ACCESS): "‚úã –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫–∞–∑—É",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.STATUS): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–∫–∞–∑–µ",
    mod_table_operate.EnumButton(orders.OrderStatus.NEW): "–ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
    mod_table_operate.EnumButton(orders.OrderStatus.PAY): "–ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã",
    mod_table_operate.EnumButton(orders.OrderStatus.ADDRESS): "–ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞",
    mod_table_operate.EnumButton(orders.OrderStatus.FINISH): "–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω",
    mod_table_operate.ButtonNames.DEL: "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑",}
button_names.update(cur_button_names)

messages = {}
messages.update(orders.messages)

cur_messages = {
    mod_simple_message.Messages.START: f'''
<b>{button_names[mod_simple_message.ButtonNames.START]}</b>

''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.STATUS): f'''
–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:
#{orders.status_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:
''',
    mod_table_operate.Messages.OPEN: f'''
<b>–ó–∞–∫–∞–∑: #{orders.name_field}</b>

<b>–û–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b> #{orders.desc_field}

<b>–°—Ç–∞—Ç—É—Å:</b> #{orders.status_field}

<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> #{orders.parent_id_field}

<b>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> #{orders.address_field}

<b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> #{orders.create_datetime_field}
''',
}

messages.update(orders.messages_order_status)
messages.update(cur_messages)

def GetCurItemsTemplate(a_Bot, a_TableName, a_StatusFieldName):
    def GetBDItems(a_Message, a_UserGroups, a_ParentID):
        request = f'SELECT * FROM {a_TableName} WHERE {a_StatusFieldName} != ?'
        return a_Bot.SQLRequest(request, param = ([str(orders.OrderStatus.FINISH)]))
    return GetBDItems

def GetBDItemsForUserTemplate(a_Bot, a_TableName):
    def GetBDItems(a_Message, a_UserGroups, a_ParentID):
        return bd_item.GetAllItemsTemplate(a_Bot, a_TableName)()
    return GetBDItems

class DBItemForUserSelectSource(bd_item_select.DBItemSelectSource):
    def __init__(self, a_Bot, a_TableName, a_ParentIDFieldName, a_PrevPrefix, a_ButtonName, a_OnlyCurrent = False):
        super().__init__(a_Bot, a_TableName, a_ParentIDFieldName, a_PrevPrefix, a_ButtonName)
        self.m_OnlyCurrent = a_OnlyCurrent

    def GetItemsFunc(self):
        if self.m_OnlyCurrent:
            return GetCurItemsTemplate(self.m_Bot, self.m_TableName, orders.status_field)
        return GetBDItemsForUserTemplate(self.m_Bot, self.m_TableName)

    def IsFirst(self):
        return True

class ModuleAllOrders(orders.ModuleOrders):
    def __init__(self, a_ParentModName, a_ChildModName, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log):
        super().__init__(table, messages, button_names, a_ParentModName, a_ChildModName, init_access, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log)

    def GetInitBDCommands(self):
        # —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ –≤ ModuleUserOrders
        return  []

    def GetName(self):
        return module_name

    def SelectSourceTemplate(self, a_PrevPrefix, a_ButtonName):
        parent_id_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.PARENT_ID)
        return DBItemForUserSelectSource(self.m_Bot, self.m_Table.GetName(), parent_id_field, a_PrevPrefix, a_ButtonName, a_OnlyCurrent = True)

    def SelectSourceForAllTemplate(self, a_PrevPrefix, a_ButtonName):
        parent_id_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.PARENT_ID)
        return DBItemForUserSelectSource(self.m_Bot, self.m_Table.GetName(), parent_id_field, a_PrevPrefix, a_ButtonName)

    def GetButtonNameAndKeyValueAndAccess(self, a_Item):
        parent_field_id = self.m_Table.GetFieldIDByDestiny(bd_table.TableFieldDestiny.PARENT_ID)
        n, k, a = super().GetButtonNameAndKeyValueAndAccess(a_Item)
        return n + ":" + str(a_Item[parent_field_id]), k, a
