# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ, 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –Ø–∑—ã–∫–∏

from bot_sys import bot_bd, keyboard, user_access, bd_table
from bot_modules import mod_table_operate, mod_simple_message, access_utils
from template import bd_item

# ---------------------------------------------------------
# –ë–î
module_name = 'languages'

table_name = module_name
key_name = 'languageID'
name_field = 'languageName'
desc_field = 'languageDesc'
photo_field = 'languagePhoto'
access_field = 'languageAccess'
create_datetime_field = 'languageCreateDateTime'

table_name_field = bd_table.TableField(name_field, bd_table.TableFieldDestiny.NAME, bd_table.TableFieldType.STR)

table = bd_table.Table(table_name, [
        bd_table.TableField(key_name, bd_table.TableFieldDestiny.KEY, bd_table.TableFieldType.INT),
        table_name_field,
        bd_table.TableField(desc_field, bd_table.TableFieldDestiny.DESC, bd_table.TableFieldType.STR),
        bd_table.TableField(photo_field, bd_table.TableFieldDestiny.PHOTO, bd_table.TableFieldType.STR),
        bd_table.TableField(access_field, bd_table.TableFieldDestiny.ACCESS, bd_table.TableFieldType.STR),
        bd_table.TableField(create_datetime_field, bd_table.TableFieldDestiny.CREATE_DATE, bd_table.TableFieldType.STR),
        ],
        [
            [table_name_field],
        ]
)

init_access = f'{user_access.user_access_group_all}=-'

# ---------------------------------------------------------
# –°–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏

button_names = {
    mod_simple_message.ButtonNames.START: "‚öë –Ø–∑—ã–∫–∏",
    mod_table_operate.ButtonNames.LIST: "üìÉ –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤",
    mod_table_operate.ButtonNames.ADD: "‚úÖ –î–æ–±–∞–≤–∏—Ç—å —è–∑—ã–∫",
    mod_table_operate.ButtonNames.EDIT: "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —è–∑—ã–∫",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.PHOTO): "‚òê –ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —è–∑—ã–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.NAME): "‚âÇ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —è–∑—ã–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.DESC): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —è–∑—ã–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ACCESS): "‚úã –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —è–∑—ã–∫—É",
    mod_table_operate.ButtonNames.DEL: "‚ùå –£–¥–∞–ª–∏—Ç—å —è–∑—ã–∫",
}

messages = {
    mod_simple_message.Messages.START: f'''
<b>{button_names[mod_simple_message.ButtonNames.START]}</b>

''',
    mod_table_operate.Messages.SELECT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:
''',
    mod_table_operate.Messages.ERROR_FIND: '''
‚ùå –û—à–∏–±–∫–∞, —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
''',
    mod_table_operate.Messages.OPEN: f'''
<b>–Ø–∑—ã–∫:  #{name_field}</b>

#{desc_field}

–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: #{create_datetime_field}
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.NAME): '''
–°–æ–∑–¥–∞–Ω–∏–µ —è–∑—ã–∫–∞. –®–∞–≥ ‚Ññ1

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.DESC): '''
–°–æ–∑–¥–∞–Ω–∏–µ —è–∑—ã–∫–∞. –®–∞–≥ ‚Ññ2

–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —è–∑—ã–∫–∞:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.PHOTO): '''
–°–æ–∑–¥–∞–Ω–∏–µ —è–∑—ã–∫–∞. –®–∞–≥ ‚Ññ3

–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–ª–æ–∂–∫—É –¥–ª—è —è–∑—ã–∫–∞ (–§–æ—Ç–æ):
–û–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–∏.
''',
    mod_table_operate.Messages.SUCCESS_CREATE: '''‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!''',
    mod_table_operate.Messages.START_EDIT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
''',
    mod_table_operate.Messages.SELECT_TO_EDIT: '''
–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.PHOTO): '''
–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è —è–∑—ã–∫–∞ (–§–æ—Ç–æ):
–û–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–∏.
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.NAME): f'''
–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞:
#{name_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.DESC): f'''
–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —è–∑—ã–∫–∞:
#{desc_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —è–∑—ã–∫–∞:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.ACCESS): f'''
–¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –∫ —è–∑—ã–∫—É:
#{access_field}

{user_access.user_access_readme}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç—É–ø–∞:
''',
    mod_table_operate.Messages.SUCCESS_EDIT: '''‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω!''',
    mod_table_operate.Messages.SELECT_TO_DELETE: '''
–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.
–í—Å–µ –∑–∞–¥–∞—á–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ —ç—Ç–æ–º —è–∑—ã–∫–µ —Ç–∞–∫ –∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!
''',
    mod_table_operate.Messages.SUCCESS_DELETE: '''‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!''',
}

class ModuleLanguages(mod_table_operate.TableOperateModule):
    def __init__(self, a_ParentModName, a_ChildModName, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log):
        super().__init__(table, messages, button_names, a_ParentModName, a_ChildModName, init_access, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log)
        self.m_LanguageIDs = {}

    def GetName(self):
        return module_name

    def GetLangID(self, a_Lang):
        return self.m_LanguageIDs.get(a_Lang, None)

    def GetLangName(self, a_LangID):
        for lang_name, lang_id in self.m_LanguageIDs:
            if a_LangID == lang_id:
                return lang_name
        return self.m_BotMessages.m_DefaultLanguage

    def FlushLanguages(self):
        msg = self.m_BotMessages.GetMessages()
        for lang, msg_dict in msg.items():
            self.AddOrIgnoreLang(lang)
        langs = bd_item.GetAllItemsTemplate(self.m_Bot, table_name)()
        if langs:
            for l in langs:
                self.m_LanguageIDs[l[1]] = str(l[0])
        print('FlushLanguages', self.m_LanguageIDs)

    def AddOrIgnoreLang(self, a_Lang : str):
        table_name = self.m_Table.GetName()
        name_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.NAME)
        photo_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.PHOTO)
        desc_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.DESC)
        access_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.ACCESS)
        create_datetime_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.CREATE_DATE)

        res, error = self.m_Bot.SQLRequest(f'INSERT OR IGNORE INTO {table_name}({photo_field}, {name_field}, {desc_field}, {access_field}, {create_datetime_field}) VALUES(?, ?, ?, ?, {bot_bd.GetBDDateTimeNow()})', 
                commit = True, return_error = True, param = (0, a_Lang, '', access_utils.GetItemDefaultAccessForModule(self.m_Bot, module_name)))

    def OnChange(self):
        self.FlushLanguages()

