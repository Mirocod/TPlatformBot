# -*- coding: utf8 -*-
# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–æ—Å—Ç–æ—è–Ω–∏–µ, 2023, –ê–ª–µ–∫—Å–µ–π –ë–µ–∑–±–æ—Ä–æ–¥–æ–≤ (Alexei Bezborodov) <AlexeiBv+mirocod_platform_bot@narod.ru> 

# –ó–∞–∫–∞–∑—ã

from bot_sys import bot_bd, keyboard, user_access, bd_table, bot_subscribes
from bot_modules import mod_table_operate, mod_simple_message
from template import bd_item_select, bd_item_view, bd_item

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

class FSMAddSubsType(StatesGroup):
    bd_item = State()

# ---------------------------------------------------------
# –ë–î
module_name = 'subscribes'

table_name = module_name
mod_name_field = 'modName'
type_field = 'subsType'
item_id_field = 'itemID'
access_field = 'subsAccess'
create_datetime_field = 'subsCreateDateTime'
parent_id_field = 'userID'

table_mod_name_field = bd_table.TableField(mod_name_field, bd_table.TableFieldDestiny.NAME, bd_table.TableFieldType.STR)
table_type_field = bd_table.TableField(type_field, bd_table.TableFieldDestiny.SUBSCRIBE_TYPE, bd_table.TableFieldType.ENUM, a_Enum = bot_subscribes.SubscribeType)
table_item_id_field = bd_table.TableField(item_id_field, bd_table.TableFieldDestiny.ITEM_ID, bd_table.TableFieldType.STR)
table_user_id_field = bd_table.TableField(parent_id_field, bd_table.TableFieldDestiny.PARENT_ID, bd_table.TableFieldType.STR)

table = bd_table.Table(table_name, [
        table_mod_name_field,
        table_type_field,
        table_item_id_field,
        bd_table.TableField(access_field, bd_table.TableFieldDestiny.ACCESS, bd_table.TableFieldType.STR),
        bd_table.TableField(create_datetime_field, bd_table.TableFieldDestiny.CREATE_DATE, bd_table.TableFieldType.STR),
        table_user_id_field,
        ],
        [
         [table_mod_name_field, table_type_field, table_user_id_field, table_item_id_field],
        ]
        )

init_access = f'{user_access.user_access_group_new}=vea'

class ButtonNames(Enum):
    ADD_SUBS = auto() 

button_names = {
    mod_simple_message.ButtonNames.START: "‚Äçüõí –ü–æ–¥–ø–∏—Å–∫–∏",
    mod_table_operate.ButtonNames.LIST: "üìÉ –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö —Ç–µ–∫—É—â–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫",
    mod_table_operate.ButtonNames.ADD_SUBS: "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
    mod_table_operate.ButtonNames.EDIT: "üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ—é –ø–æ–¥–ø–∏—Å–∫—É",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.NAME): "‚âÇ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –≤ –º–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.SUBSCRIBE_TYPE): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –≤ –º–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ITEM_ID): "ùå¥ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ",
    mod_table_operate.EditButton(bd_table.TableFieldDestiny.ACCESS): "‚úã –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ",
    mod_table_operate.ButtonNames.DEL: "‚ùå –£–¥–∞–ª–∏—Ç—å –º–æ—é –ø–æ–¥–ø–∏—Å–∫—É",
}

messages = {
    mod_simple_message.Messages.START: f'''
<b>{button_names[mod_simple_message.ButtonNames.START]}</b>

''',
    mod_table_operate.Messages.SELECT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:
''',
    mod_table_operate.Messages.ERROR_FIND: '''
‚ùå –û—à–∏–±–∫–∞, –ø–æ–¥–ø–∏—Å–∫—É –Ω–µ –Ω–∞–π–¥–µ–Ω
''',
    mod_table_operate.Messages.OPEN: f'''
<b>–ü–æ–¥–ø–∏—Å–∫—É: #{name_field}</b>

<b>–û–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–æ—Å—Ç–∞–≤ –ø–æ–¥–ø–∏—Å–∫–∏:</b> #{desc_field}

<b>–°—Ç–∞—Ç—É—Å:</b> #{status_field}

<b>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> #{address_field}

<b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> #{create_datetime_field}
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.NAME): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏. –®–∞–≥ ‚Ññ1

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.SUBSCRIBE_TYPE): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏. –®–∞–≥ ‚Ññ2

–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏:
''',
    mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.ITEM_ID): '''
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏. –®–∞–≥ ‚Ññ3

–ù–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è (-1, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç):
''',
    mod_table_operate.Messages.SUCCESS_CREATE: '''‚úÖ –ü–æ–¥–ø–∏—Å–∫—É —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!''',
    mod_table_operate.Messages.START_EDIT: '''
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
''',
    mod_table_operate.Messages.SELECT_TO_EDIT: '''
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.NAME): f'''
–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:
#{name_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.SUBSCRIBE_TYPE): f'''
–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:
#{desc_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.ITEM_ID): f'''
–¢–µ–∫—É—â–∏–π –∞–¥—Ä–µ—Å –ø–æ–¥–ø–∏—Å–∫–∏:
#{desc_field}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞:
''',
    mod_table_operate.EditMessage(bd_table.TableFieldDestiny.ACCESS): f'''
–¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø –∫ –ø–æ–¥–ø–∏—Å–∫—É—É:
#{access_field}

{user_access.user_access_readme}

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç—É–ø–∞:
''',
    mod_table_operate.Messages.SUCCESS_EDIT: '''‚úÖ –ü–æ–¥–ø–∏—Å–∫—É —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ!''',
    mod_table_operate.Messages.SELECT_TO_DELETE: '''
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.
''',
    mod_table_operate.Messages.SUCCESS_DELETE: '''‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω–∞!''',
}

messages_subs_type_status = {
    mod_table_operate.EnumMessageForView(bot_subscribes.SubscribeType.ADD): f'''–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞''',
    mod_table_operate.EnumMessageForView(bot_subscribes.SubscribeType.ANY_ITEM_DEL): f'''–£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞''',
    mod_table_operate.EnumMessageForView(bot_subscribes.SubscribeType.ANY_ITEM_EDIT): f'''–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞''',
    mod_table_operate.EnumMessageForView(bot_subscribes.SubscribeType.ITEM_DEL): f'''–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞''',
    mod_table_operate.EnumMessageForView(bot_subscribes.SubscribeType.ITEM_EDIT): f'''–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞''',
}

messages.update(messages_subs_type_status)

def GetCurItemsTemplate(a_Bot, a_TableName, a_UserIDFieldName, a_StatusFieldName):
    def GetBDItems(a_Message, a_UserGroups, a_ParentID):
        user_id = str(a_Message.from_user.id)
        request = f'SELECT * FROM {a_TableName} WHERE {a_UserIDFieldName} = ? AND {a_StatusFieldName} != ?'
        return a_Bot.SQLRequest(request, param = ([user_id, str(OrderStatus.FINISH)]))
    return GetBDItems

def GetBDItemsForUserTemplate(a_Bot, a_TableName, a_UserIDFieldName):
    def GetBDItems(a_Message, a_UserGroups, a_ParentID):
        user_id = str(a_Message.from_user.id)
        return bd_item.GetBDItemsTemplate(a_Bot, a_TableName, a_UserIDFieldName)(user_id)
    return GetBDItems

class DBItemForUserSelectSource(bd_item_select.DBItemSelectSource):
    def __init__(self, a_Bot, a_TableName, a_ParentIDFieldName, a_PrevPrefix, a_ButtonName):
        super().__init__(a_Bot, a_TableName, a_ParentIDFieldName, a_PrevPrefix, a_ButtonName)

    def GetItemsFunc(self):
        return GetBDItemsForUserTemplate(self.m_Bot, self.m_TableName, self.m_ParentIDFieldName)

    def IsFirst(self):
        return True

class ModuleSubscribe(mod_table_operate.TableOperateModule):
    def __init__(self, a_Table, a_Messages, a_Buttons, a_ParentModName, a_ChildModName, a_InitAccess, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log):
        super().__init__(table, a_Messages, a_Buttons, a_ParentModName, a_ChildModName, a_InitAccess, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log)

    def SelectSourceTemplate(self, a_PrevPrefix, a_ButtonName):
        parent_id_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.PARENT_ID)
        return DBItemForUserSelectSource(self.m_Bot, self.m_Table.GetName(), parent_id_field, a_PrevPrefix, a_ButtonName)

    def AddBDItemFunc(self, a_ItemData, a_UserID):
        parent_id_field = self.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.PARENT_ID)
        a_ItemData[parent_id_field] = a_UserID
        return super().AddBDItemFunc(a_ItemData, a_UserID)

    def RegisterHandlers(self):
        super().RegisterHandlers()
        GetButtonNameAndKeyValueAndAccess = self.m_GetButtonNameAndKeyValueAndAccessFunc
        GetAccess = self.m_GetAccessFunc

        defaul_keyboard_func = self.m_GetStartKeyboardButtonsFunc

        parent_table_name = None
        parent_key_name = None
        if self.m_ParentModName:
            parent_mod = self.GetModule(self.m_ParentModName)
            parent_table_name = parent_mod.m_Table.GetName()
            parent_key_name = parent_mod.m_Table.GetFieldNameByDestiny(bd_table.TableFieldDestiny.KEY)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ 
        a_ButtonName = self.GetButton(ButtonNames.ADD_SUBS)
        if a_ButtonName:
            a_Prefix = self.RegisterSelect(a_ButtonName, user_access.AccessMode.ADD, only_parent = True)

            check_func = bd_item.GetCheckForTextFunc(a_ButtonName)
            if a_Prefix:
                check_func = bd_item.GetCheckForPrefixFunc(a_Prefix)

            bd_item_add.AddBDItem1RegisterHandlers(self.m_Bot,\
                    check_func,\
                    FSMAddSubsType,\
                    self.m_AddBDItemFunc,\
                    self.ShowMessageTemplate(self.GetMessage(mod_table_operate.CreateMessage(bd_table.TableFieldDestiny.NAME))),\
                    self.ShowMessageTemplate(self.GetMessage(mod_table_operate.Messages.SUCCESS_CREATE)),\
                    a_Prefix,\
                    parent_table_name,\
                    parent_key_name,\
                    name_field,\
                    GetButtonNameAndKeyValueAndAccess,\
                    GetAccess,\
                    defaul_keyboard_func,\
                    bd_item.FieldType.text,\
                    access_mode = user_access.AccessMode.ADD\
                    )

class ModuleUserSubscribe(ModuleOrders):
    def __init__(self, a_ParentModName, a_ChildModName, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log):
        super().__init__(table, messages, button_names, a_ParentModName, a_ChildModName, init_access, a_ChildModuleNameList, a_EditModuleNameList, a_Bot, a_ModuleAgregator, a_BotMessages, a_BotButtons, a_Log)

    def GetName(self):
        return module_name
